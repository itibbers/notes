(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{204:function(t,v,_){"use strict";_.r(v);var a=_(3),s=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"了解下-npm"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#了解下-npm"}},[t._v("#")]),t._v(" 了解下 npm")]),t._v(" "),_("p",[t._v("[TOC]")]),t._v(" "),_("h2",{attrs:{id:"前言"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),_("p",[t._v("npm 是世界上最大的软件注册表。来自各大洲的开源开发人员使用 npm 共享和借用软件包，许多组织也使用 npm 管理私人开发。")]),t._v(" "),_("ol",[_("li",[t._v("npm cli 命令了解多少？")]),t._v(" "),_("li",[t._v("你是什么时候通过什么方式“学会”npm 的？")])]),t._v(" "),_("p",[t._v("其实常用的命令确实就几个，但是多掌握几个会使我们对项目把控更加"),_("strong",[t._v("丝滑")]),t._v("。")]),t._v(" "),_("h2",{attrs:{id:"常见问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[t._v("#")]),t._v(" 常见问题")]),t._v(" "),_("p",[t._v("为什么要 package-lock.json？")]),t._v(" "),_("p",[t._v("install 更新了 package-lock，要不要 push，会产生什么影响？")]),t._v(" "),_("p",[t._v("升级了 node 版本，要不要重新 install，install 之前要不要删除 node_modules？")]),t._v(" "),_("p",[t._v("各种版本号^~x.x.x 有什么区别？")]),t._v(" "),_("p",[t._v("如何更新依赖，update 做了什么操作？")]),t._v(" "),_("h2",{attrs:{id:"cli-命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cli-命令"}},[t._v("#")]),t._v(" cli 命令")]),t._v(" "),_("p",[t._v("包管理相关")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("命令")]),t._v(" "),_("th",[t._v("alias")]),t._v(" "),_("th",[t._v("描述")]),t._v(" "),_("th",[t._v("备注")]),t._v(" "),_("th",[t._v("分类")]),t._v(" "),_("th")])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("init")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("创建一个 package.json 文件")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("install")]),t._v(" "),_("td",[t._v("i")]),t._v(" "),_("td",[t._v("安装包")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("install-test")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Install package(s) and run tests")]),t._v(" "),_("td",[t._v("npm install && npm test")]),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("uninstall")]),t._v(" "),_("td",[t._v("remove, rm, r, un, unlink")]),t._v(" "),_("td",[t._v("卸载包")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("ci")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Install a project with a clean")]),t._v(" "),_("td",[t._v("1. 与 install 相似，用于自动化环境或者在任何情况下都要确保干净安装依赖项，比 install 更快更严格。"),_("br"),t._v("2. 要求项目必须有 package-lock.json 或 npm-shrinkwrap.json。"),_("br"),t._v("3. 如果 package-lock.json 与 package.json 中的依赖项不匹配，则退出并显示错误，而还是更新 package-lock.json。"),_("br"),t._v("4. 如果 node_modules 已经存在，它将在开始安装之前自动删除。"),_("br"),t._v("5. 永远不会写入 package.json 和 package-locks。")]),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td",[t._v("构建")])]),t._v(" "),_("tr",[_("td",[t._v("install-ci-test")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Install a project with a clean slate and run tests")]),t._v(" "),_("td",[t._v("npm ci && npm test")]),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("link")]),t._v(" "),_("td",[t._v("ln")]),t._v(" "),_("td",[t._v("全局安装当前项目")]),t._v(" "),_("td",[t._v("为当前项目创建一个软链")]),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("ls")]),t._v(" "),_("td",[t._v("list, la, ll")]),t._v(" "),_("td",[t._v("列出安装的包")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("outdated")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("检查过时的包")]),t._v(" "),_("td",[t._v("红色表示有一个新版本符合项目 semver 要求，因此应该立即进行更新。"),_("br"),t._v("黄色表示有较新的版本超过 semver 要求（通常是 major or minor），因此请谨慎操作。")]),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td",[t._v("依赖")])]),t._v(" "),_("tr",[_("td",[t._v("update")]),t._v(" "),_("td",[t._v("up, upgrade")]),t._v(" "),_("td",[t._v("更新依赖")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td",[t._v("依赖")])]),t._v(" "),_("tr",[_("td",[t._v("prune")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("移除无关的包")]),t._v(" "),_("td",[t._v("无关的包指的是没有在父包的依赖关系列表中列出的包。如果指定--production 或 NODE_ENV=production，这个命令将移除 "),_("code",[t._v("devDependencies")]),t._v(" 配置信息中列出的包")]),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td",[t._v("构建")])]),t._v(" "),_("tr",[_("td",[t._v("audit")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("运行安全审计")]),t._v(" "),_("td",[t._v("安全检查，更新安装兼容性的包 ex: npm i moment@1")]),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("dedupe")]),t._v(" "),_("td",[t._v("ddp")]),t._v(" "),_("td",[t._v("减少包重复")]),t._v(" "),_("td",[t._v("貌似现在会自动 ddp，不知道从哪个版本开始的，不影响使用")]),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("edit")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("编辑已经安装的包")]),t._v(" "),_("td",[t._v("npm edit react，默认用 vi 打开")]),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("pack")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("打包")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("publish")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("发布包")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("unpublish")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Remove a package from the registry")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("search")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("查询包")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("rebuild")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("重新构建包")]),t._v(" "),_("td",[t._v("执行 install 后的 c++编译过程")]),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("run-script")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Run arbitrary package scripts")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("start")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("start 脚本")]),t._v(" "),_("td",[t._v("npm run start，如果 "),_("code",[t._v('"scripts"')]),t._v(" 对象中没有定义 "),_("code",[t._v('"start"')]),t._v(" 属性， 默认执行 "),_("code",[t._v("node server.js")]),t._v(" 命令。")]),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("restart")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Restart a package")]),t._v(" "),_("td",[t._v("Order: prerestart prestop stop poststop restart prestart start poststart postrestart")]),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("stop")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("stop 脚本")]),t._v(" "),_("td",[t._v("npm run stop")]),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("test")]),t._v(" "),_("td",[t._v("t, tst")]),t._v(" "),_("td",[t._v("test 脚本")]),t._v(" "),_("td",[t._v("npm run test")]),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("shrinkwrap")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("锁定依赖包的版本")]),t._v(" "),_("td",[t._v("此命令将根据 "),_("code",[t._v("package-lock.json")]),t._v(" 文件创建一个新的或覆盖已有的 "),_("code",[t._v("npm-shrinkwrap.json")]),t._v(" 文件。")]),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("dist-tag")]),t._v(" "),_("td",[t._v("dist-tags")]),t._v(" "),_("td",[t._v("管理包标签")]),t._v(" "),_("td",[t._v("该命令以前称为"),_("code",[t._v("npm tag")]),t._v("，仅创建新标签，因此语法不同。")]),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("version")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("更新项目 version")]),t._v(" "),_("td",[t._v("major minor patch")]),t._v(" "),_("td",[t._v("包管理")]),t._v(" "),_("td")])])]),t._v(" "),_("p",[t._v("配置相关")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("命令")]),t._v(" "),_("th",[t._v("alias")]),t._v(" "),_("th",[t._v("描述")]),t._v(" "),_("th",[t._v("备注")]),t._v(" "),_("th",[t._v("分类")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("config")]),t._v(" "),_("td",[t._v("c")]),t._v(" "),_("td",[t._v("管理 npm 配置文件")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("配置")])]),t._v(" "),_("tr",[_("td",[t._v("bin")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("显示 npm 的 bin 文件夹的路径")]),t._v(" "),_("td",[t._v("-g 显示全局")]),t._v(" "),_("td",[t._v("配置")])]),t._v(" "),_("tr",[_("td",[t._v("root")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("显示 npm 根目录")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("配置")])]),t._v(" "),_("tr",[_("td",[t._v("prefix")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("显示（目录）前缀")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("配置")])]),t._v(" "),_("tr",[_("td",[t._v("bugs")]),t._v(" "),_("td",[t._v("issues")]),t._v(" "),_("td",[t._v("浏览器中打开指定包的 issues 页面")]),t._v(" "),_("td",[t._v("npm bugs package")]),t._v(" "),_("td",[t._v("配置")])]),t._v(" "),_("tr",[_("td",[t._v("docs")]),t._v(" "),_("td",[t._v("home")]),t._v(" "),_("td",[t._v("浏览器打开指定包文档页")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("配置")])]),t._v(" "),_("tr",[_("td",[t._v("repo")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("在浏览器中打开指定包的源码仓库页面")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("配置")])]),t._v(" "),_("tr",[_("td",[t._v("doctor")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("检查环境")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("配置")])]),t._v(" "),_("tr",[_("td",[t._v("hook")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("管理源 hooks")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("配置")])]),t._v(" "),_("tr",[_("td",[t._v("help")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("显示 npm 帮助")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("配置")])]),t._v(" "),_("tr",[_("td",[t._v("help-search")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("搜索帮助文档")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("配置")])]),t._v(" "),_("tr",[_("td",[t._v("ping")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Ping npm 注册表")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("配置")])]),t._v(" "),_("tr",[_("td",[t._v("view")]),t._v(" "),_("td",[t._v("info, show, v")]),t._v(" "),_("td",[t._v("View registry info")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("配置")])]),t._v(" "),_("tr",[_("td",[t._v("completion")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("使 npm 命令可以 tab 补全")]),t._v(" "),_("td",[t._v("npm completion >> /usr/local/etc/bash_completion.d/npm")]),t._v(" "),_("td",[t._v("配置")])])])]),t._v(" "),_("p",[t._v("账户相关")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("命令")]),t._v(" "),_("th",[t._v("alias")]),t._v(" "),_("th",[t._v("描述")]),t._v(" "),_("th",[t._v("备注")]),t._v(" "),_("th",[t._v("分类")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("access")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("设置已发布包的访问级别")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("账户")])]),t._v(" "),_("tr",[_("td",[t._v("adduser")]),t._v(" "),_("td",[t._v("login, add-user")]),t._v(" "),_("td",[t._v("添加一个注册源用户账户")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("账户")])]),t._v(" "),_("tr",[_("td",[t._v("deprecate")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("作废指定包的指定版本")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("账户")])]),t._v(" "),_("tr",[_("td",[t._v("logout")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("注册源账户退出")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("账户")])]),t._v(" "),_("tr",[_("td",[t._v("org")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("组织相关管理")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("账户")])]),t._v(" "),_("tr",[_("td",[t._v("owner")]),t._v(" "),_("td",[t._v("author")]),t._v(" "),_("td",[t._v("管理软件包所有者")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("账户")])]),t._v(" "),_("tr",[_("td",[t._v("profile")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("更改注册表配置文件中的个人资料")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("账户")])]),t._v(" "),_("tr",[_("td",[t._v("star")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("标记你所喜欢的包")]),t._v(" "),_("td",[t._v("star unstar")]),t._v(" "),_("td",[t._v("账户")])]),t._v(" "),_("tr",[_("td",[t._v("stars")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("查看 star 过的包")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("账户")])]),t._v(" "),_("tr",[_("td",[t._v("team")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("管理组织团队及其关系")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("账户")])]),t._v(" "),_("tr",[_("td",[t._v("token")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("管理权限 token")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("账户")])]),t._v(" "),_("tr",[_("td",[t._v("whoami")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("显示 npm 用户名")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("账户")])])])]),t._v(" "),_("p",[t._v("八百年用不到")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("命令")]),t._v(" "),_("th",[t._v("alias")]),t._v(" "),_("th",[t._v("描述")]),t._v(" "),_("th",[t._v("备注")]),t._v(" "),_("th",[t._v("分类")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("build")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("构建一个包")]),t._v(" "),_("td",[t._v("npm link/install 内部调用，约等于内部执行 npm run build")]),t._v(" "),_("td",[t._v("内部")])]),t._v(" "),_("tr",[_("td",[t._v("bundle")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("此命令 1.0 版本中已被删除")]),t._v(" "),_("td",[t._v("现在默认行为是安装依赖包到本地空间")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("cache")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("操作包缓存")]),t._v(" "),_("td",[t._v("主要供内部使用，默认目录~/.npm/_cacache，npm cache verify 脱机验证。")]),t._v(" "),_("td",[t._v("内部")])]),t._v(" "),_("tr",[_("td",[t._v("explore")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Browse an installed package")]),t._v(" "),_("td",[t._v("实测没效果")]),t._v(" "),_("td")])])]),t._v(" "),_("h2",{attrs:{id:"semver"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#semver"}},[t._v("#")]),t._v(" semver")]),t._v(" "),_("h4",{attrs:{id:"依赖地狱"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#依赖地狱"}},[t._v("#")]),t._v(" 依赖地狱")]),t._v(" "),_("p",[t._v("通俗而言，“依赖地狱”指开发者安装某个软件包时，发现这个软件包里又依赖不同特定版本的其它软件包。随着系统功能越来越复杂，依赖的软件包越来越多，依赖关系也越来越深，这个时候可能面临版本控制被锁死的风险。")]),t._v(" "),_("p",[t._v("因此，Github 起草了一个具有指导意义的，统一的版本号表示规则，称为 Semantic Versioning(语义化版本表示)。该规则规定了版本号如何表示，如何增加，如何进行比较，不同的版本号意味着什么。")]),t._v(" "),_("p",[t._v("下面是遵从了 Semver 规范的 React 依赖图，"),_("a",{attrs:{href:"http://xn--npm-sk6et42cumh2n2c.broofa.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("截图来自 npm.broofa.com"),_("OutboundLink")],1),t._v(":")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://tva1.sinaimg.cn/large/007S8ZIlgy1gia1xozb5sj313s0cfwgi.jpg",alt:""}})]),t._v(" "),_("p",[t._v("可以看出，遵从了 Semver 规范的包依赖非常清晰，没有出现循环依赖、依赖冲突等常见问题。")]),t._v(" "),_("h4",{attrs:{id:"版本格式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#版本格式"}},[t._v("#")]),t._v(" 版本格式")]),t._v(" "),_("p",[t._v("版本格式：主版本号.次版本号.修订号，版本号递增规则如下：")]),t._v(" "),_("ul",[_("li",[t._v("主版本号(major)：当你做了不兼容的 API 修改，")]),t._v(" "),_("li",[t._v("次版本号(minor)：当你做了向下兼容的功能性新增，可以理解为 Feature 版本，")]),t._v(" "),_("li",[t._v("修订号(patch)：当你做了向下兼容的问题修正，可以理解为 Bug fix 版本。")])]),t._v(" "),_("p",[t._v("先行版本号及版本编译信息可以加到“主版本号.次版本号.修订号”的后面，作为延伸。")]),t._v(" "),_("h4",{attrs:{id:"先行版本"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#先行版本"}},[t._v("#")]),t._v(" 先行版本")]),t._v(" "),_("p",[t._v("当要发布"),_("strong",[t._v("大版本")]),t._v("或者"),_("strong",[t._v("核心的 Feature")]),t._v("时，但是又不能保证这个版本的功能 100% 正常。这个时候就需要通过发布"),_("strong",[t._v("先行版本")]),t._v("。比较常见的先行版本包括：内测版、灰度版本了和 RC 版本。Semver 规范中使用 alpha、beta、rc(以前叫做 gama)来修饰即将要发布的版本。它们的含义是：")]),t._v(" "),_("ul",[_("li",[t._v("alpha: 内部版本")]),t._v(" "),_("li",[t._v("beta: 公测版本")]),t._v(" "),_("li",[t._v("rc: 即 Release candiate，正式版本的候选版本")])]),t._v(" "),_("p",[t._v("比如：1.0.0-alpha.0, 1.0.0-alpha.1, 1.0.0-beta.0, 1.0.0-rc.0, 1.0.p-rc.1 等版本。alpha, beta, rc 后需要带上次数信息。")]),t._v(" "),_("h4",{attrs:{id:"版本发布准则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#版本发布准则"}},[t._v("#")]),t._v(" 版本发布准则")]),t._v(" "),_("p",[t._v("列举出比较实用的一些规则：")]),t._v(" "),_("ul",[_("li",[t._v("标准的版本号必须采用 XYZ 的格式，并且 X、Y 和 Z 为非负的整数，禁止在数字前方补零，版本发布需要严格递增。例如：1.9.1 -> 1.10.0 -> 1.11.0。")]),t._v(" "),_("li",[t._v("某个软件版本发行后，任何修改都必须以新版本发行。")]),t._v(" "),_("li",[t._v("1.0.0 的版本号用于界定公共 API。当你的软件发布到了正式环境，或者有稳定的 API 时，就可以发布 1.0.0 版本了。")]),t._v(" "),_("li",[t._v("版本的优先层级指的是不同版本在排序时如何比较。判断优先层级时，必须把版本依序拆分为主版本号、次版本号、修订号及先行版本号后进行比较。")])]),t._v(" "),_("h4",{attrs:{id:"npm-包依赖"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#npm-包依赖"}},[t._v("#")]),t._v(" npm 包依赖")]),t._v(" "),_("p",[t._v("项目对包的依赖可以使用下面的 3 种方法来表示(假设当前版本号是 16.2.0):")]),t._v(" "),_("ul",[_("li",[t._v("兼容模块新发布的补丁版本：~16.2.0、16.2.x、16.2")]),t._v(" "),_("li",[t._v("兼容模块新发布的小版本、补丁版本：^16.2.0、16.x、16")]),t._v(" "),_("li",[t._v("兼容模块新发布的大版本、小版本、补丁版本：*、x")])]),t._v(" "),_("div",{staticClass:"language-json extra-class"},[_("pre",{pre:!0,attrs:{class:"language-json"}},[_("code",[_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dependencies"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[t._v('"foo"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0.0 - 2.9999.9999"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bar"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('">=1.0.2 <2.1.2"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[t._v('"baz"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('">1.0.2 <=2.3.4"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[t._v('"boo"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.0.1"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[t._v('"qux"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<1.0.0 || >=2.3.1 <2.4.5 || >=2.5.2 <3.0.0"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[t._v('"asd"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://asdf.com/asdf.tar.gz"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[t._v('"til"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~1.2"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[t._v('"elf"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~1.2.3"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[t._v('"two"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.x"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[t._v('"thr"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.3.x"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lat"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"latest"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dyl"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file:../dyl"')]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),_("h4",{attrs:{id:"npm-包发布"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#npm-包发布"}},[t._v("#")]),t._v(" npm 包发布")]),t._v(" "),_("p",[t._v("通常我们发布一个包到 npm 仓库时，我们的做法是先修改 package.json 为某个版本，然后执行 npm publish 命令。手动修改版本号的做法建立在你对 Semver 规范特别熟悉的基础之上，否则可能会造成版本混乱。npm 考虑到了这点，它提供了相关的命令来让我们更好的遵从 Semver 规范：")]),t._v(" "),_("ul",[_("li",[t._v("升级补丁版本号：npm version patch")]),t._v(" "),_("li",[t._v("升级小版本号：npm version minor")]),t._v(" "),_("li",[t._v("升级大版本号：npm version major")])]),t._v(" "),_("p",[t._v("当执行 npm publish 时，会首先将当前版本发布到 npm registry，然后更新 dist-tags.latest 的值为新版本。")]),t._v(" "),_("p",[t._v("当执行 npm publish --tag=next 时，会首先将当前版本发布到 npm registry，并且更新 dist-tags.next 的值为新版本。这里的 next 可以是任意有意义的命名（比如：v1.x、v2.x 等等）")]),t._v(" "),_("h4",{attrs:{id:"参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://semver.org/lang/zh-CN/",target:"_blank",rel:"noopener noreferrer"}},[t._v("语义化版本 2.0.0"),_("OutboundLink")],1)])]),t._v(" "),_("h2",{attrs:{id:"npm-install-时-package-lock-json-的更新策略"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#npm-install-时-package-lock-json-的更新策略"}},[t._v("#")]),t._v(" npm install 时 package-lock.json 的更新策略")]),t._v(" "),_("h4",{attrs:{id:"为什么需要-lockfiles？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要-lockfiles？"}},[t._v("#")]),t._v(" 为什么需要 lockfiles？")]),t._v(" "),_("p",[t._v("npm install 的输入是 package.json，它的输出是一棵 node_modules 树。理想情况下，npm install 应该像纯函数一样工作，对于同一个 package.json 总是生成完全相同的 node_modules 树。在某些情况下，确实如此。但在其他很多情况中，npm 无法做到这一点。有以下原因：")]),t._v(" "),_("ul",[_("li",[t._v("不同版本的 npm 的安装算法不同。")]),t._v(" "),_("li",[t._v("某些依赖项自上次安装以来，可能已发布了新版本，因此将根据 package.json 中的 semver-range version 更新依赖。")]),t._v(" "),_("li",[t._v("某个依赖项的依赖项可能已发布新版本，即使使用了固定依赖项说明符（1.2.3 而不是 ^1.2.3），它也会更新。")])]),t._v(" "),_("p",[t._v("为了在不同的环境下生成相同的 node_modules，npm 使用 package-lock.json 或 npm-shrinkwrap.json。这两个文件都被称为 lockfiles。无论何时运行 npm install，npm 都会生成或更新 lockfiles。以下只讨论其中的 package-lock.json。")]),t._v(" "),_("h4",{attrs:{id:"不同-npm-版本下-npm-install-的规则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#不同-npm-版本下-npm-install-的规则"}},[t._v("#")]),t._v(" 不同 npm 版本下 npm install 的规则")]),t._v(" "),_("ul",[_("li",[t._v("npm 5.0.x 版本：不管 package.json 中依赖是否有更新，npm i 都会根据 package-lock.json 下载。针对这种安装策略，有人提出了这个 issue - "),_("a",{attrs:{href:"https://github.com/npm/npm/issues/16866",target:"_blank",rel:"noopener noreferrer"}},[t._v("#16866"),_("OutboundLink")],1),t._v(" ，大概意思是我明明手动改了 package.json，为啥不给我升级包！然后就导致了 5.1.0 的问题...")]),t._v(" "),_("li",[t._v("5.1.0 版本后：当 package.json 中的依赖项有新版本时，npm install 会无视 package-lock.json 去下载新版本的依赖项并且更新 package-lock.json。针对这种安装策略，又有人提出了一个 issue - "),_("a",{attrs:{href:"https://github.com/npm/npm/issues/17979",target:"_blank",rel:"noopener noreferrer"}},[t._v("#17979"),_("OutboundLink")],1),t._v(" ，参考 npm 贡献者 iarna 的评论，得出 5.4.2 版本后的规则。「大人，时代变了」")]),t._v(" "),_("li",[t._v("5.4.2 版本后：\n"),_("ul",[_("li",[t._v("如果只有一个 package.json 文件，运行 "),_("code",[t._v("npm i")]),t._v(" 会根据它生成一个 package-lock.json 文件。")]),t._v(" "),_("li",[t._v("如果 package.json 的 semver-range version 和 package-lock.json 中版本兼容，即使此时 package.json 中有新的版本，执行 "),_("code",[t._v("npm i")]),t._v(" 也还是会根据 package-lock.json 下载 。")]),t._v(" "),_("li",[t._v("如果手动修改了 package.json 的 version ranges，且和 package-lock.json 中版本不兼容，那么执行 "),_("code",[t._v("npm i")]),t._v(" 时 package-lock.json 将会更新到兼容 package.json 的版本。")])])])]),t._v(" "),_("h4",{attrs:{id:"如果切换了源，该怎么正确的更新-locksfile？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如果切换了源，该怎么正确的更新-locksfile？"}},[t._v("#")]),t._v(" 如果切换了源，该怎么正确的更新 locksfile？")]),t._v(" "),_("p",[t._v("node_modules 下的每个包在下载的时候会在 package.json 中指定 _resolved 字段，当去更新 package-lock.json 时，会去 copy 这个字段，而不是当前 npm 指定的源，后面即使更新了源，也不会改变已经下载的包的 _resolved 字段。")]),t._v(" "),_("p",[t._v("是否可以通过删除整个 node_modules 重新下载来解决这个问题？根据 npm@5.4.2 版本后 npm install 规则，如果 package-lock.json 中的"),_("strong",[t._v("版本")]),t._v("跟 package.json 中的"),_("strong",[t._v("版本")]),t._v("兼容，npm install 还是会根据 package-lock.json 文件描述去下载包资源。注意只会校验版本，如果版本兼容，并不会更新 package-lock.json 文件，源还是没有变。npm update 实际证明同样不会更新源，除非这个包更新了。")]),t._v(" "),_("p",[t._v("正确操作：可以通过删掉 package-lock.json，执行 npm install 重新生成一份 locksfile 的方式来解决源变化。")]),t._v(" "),_("h4",{attrs:{id:"参考-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考-2"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://docs.npmjs.com/files/package-locks",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm-locks"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://stackoverflow.com/questions/45022048/why-does-npm-install-rewrite-package-lock-json",target:"_blank",rel:"noopener noreferrer"}},[t._v("Why does “npm install” rewrite package-lock.json?"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://www.zhihu.com/question/62331583",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm install 生成的 package-lock.json 是什么文件？有什么用？"),_("OutboundLink")],1)])]),t._v(" "),_("h2",{attrs:{id:"npm-ci"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#npm-ci"}},[t._v("#")]),t._v(" npm ci")]),t._v(" "),_("h4",{attrs:{id:"介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),_("ul",[_("li",[t._v("ci：Continuous Integration。")]),t._v(" "),_("li",[t._v("npm 版本至少是 "),_("a",{attrs:{href:"https://github.com/npm/npm/releases/tag/v5.7.1",target:"_blank",rel:"noopener noreferrer"}},[t._v("v5.7.1"),_("OutboundLink")],1),t._v("。")]),t._v(" "),_("li",[t._v("此命令与 npm install 类似，不同之处在于它旨在用于自动化环境，例如集成测试环境、线上环境、或者您希望确保干净安装依赖项的任何情况。通过跳过某些面向用户的功能，它可以比常规的 npm install 快得多。它也比常规安装更严格，它可以捕获由于本地环境的增量安装引起的错误或不一致。")])]),t._v(" "),_("h4",{attrs:{id:"npm-ci-和-npm-install-差异"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#npm-ci-和-npm-install-差异"}},[t._v("#")]),t._v(" npm ci 和 npm install 差异")]),t._v(" "),_("ul",[_("li",[t._v("项目必须存在 package-lock.json 或 npm-shrinkwrap.json。")]),t._v(" "),_("li",[t._v("如果 lockfiles 中的依赖和 package.json 中不匹配，npm ci 会退出并且报错，而不是去更新 lockfiles。")]),t._v(" "),_("li",[t._v("npm ci 只能安装整个项目的依赖，无法安装单个依赖。")]),t._v(" "),_("li",[t._v("如果 node_modules 已经存在，它将在 npm ci 开始安装之前自动删除。")]),t._v(" "),_("li",[t._v("npm ci 永远不会改变 package.json 和 package-lock.json。")])]),t._v(" "),_("h4",{attrs:{id:"补充"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#补充"}},[t._v("#")]),t._v(" 补充")]),t._v(" "),_("ul",[_("li",[t._v("npm install 读取 package.json 创建依赖项列表，并使用 package-lock.json 来通知要安装这些依赖项的哪个版本。如果某个依赖项在 package.json 中，但是不在 package-lock.json 中，运行 npm install 会将这个依赖项的确定版本更新到 package-lock.json 中。")]),t._v(" "),_("li",[t._v("npm ci 是根据 package-lock.json 去安装确定的依赖，package.json 只是用来验证是不是有不匹配的版本，假设 package-lock.json 中存在一个确定版本的依赖 A，如果 package.json 中不存在依赖 A 或者依赖 A 版本和 lock 中不兼容，npm ci 就会报错。")])]),t._v(" "),_("h4",{attrs:{id:"参考-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考-3"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://docs.npmjs.com/cli/ci.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm-ci"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://stackoverflow.com/questions/52499617/what-is-the-difference-between-npm-install-and-npm-ci",target:"_blank",rel:"noopener noreferrer"}},[t._v("what-is-the-difference-between-npm-install-and-npm-ci"),_("OutboundLink")],1)])]),t._v(" "),_("h2",{attrs:{id:"其他文章链接"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#其他文章链接"}},[t._v("#")]),t._v(" 其他文章链接")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://juejin.im/post/6844903892094812173",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeScript 踩坑之旅"),_("OutboundLink")],1)]),t._v(" "),_("p",[t._v("["),_("a",{attrs:{href:"https://juejin.im/post/6844903892119977998",target:"_blank",rel:"noopener noreferrer"}},[t._v("译文]一步步构建发布一个 TypeScript NPM 包"),_("OutboundLink")],1)]),t._v(" "),_("p",[_("a",{attrs:{href:"https://juejin.im/post/6844903903193104398",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm install package-lock.json 的更新策略"),_("OutboundLink")],1)]),t._v(" "),_("p",[t._v("["),_("a",{attrs:{href:"https://juejin.im/post/6844903927469572104",target:"_blank",rel:"noopener noreferrer"}},[t._v("译]浏览器语言首选项"),_("OutboundLink")],1)]),t._v(" "),_("p",[_("a",{attrs:{href:"https://juejin.im/post/6844903938647392263",target:"_blank",rel:"noopener noreferrer"}},[t._v("Date.prototype.toLocaleString()"),_("OutboundLink")],1)]),t._v(" "),_("p",[_("img",{attrs:{src:"https://tva1.sinaimg.cn/large/007S8ZIlgy1gia27n9v37j30d70blacz.jpg",alt:""}})])])}),[],!1,null,null,null);v.default=s.exports}}]);